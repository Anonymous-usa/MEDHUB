from django.db.models.signals import post_save
from django.dispatch import receiver
from django.contrib.contenttypes.models import ContentType
import logging

from appointments.models import AppointmentRequest
from reviews.models import Review
from .models import Notification

logger = logging.getLogger(__name__)


def _create_notification(recipient, actor, verb, target_obj, notification_type="info"):
    """
    –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
    –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞.
    """
    if not recipient or recipient == actor:
        return  # –ù–µ —Å–æ–∑–¥–∞—ë–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–∞–º–æ–º—É —Å–µ–±–µ –∏–ª–∏ –±–µ–∑ –ø–æ–ª—É—á–∞—Ç–µ–ª—è

    try:
        Notification.objects.create(
            recipient=recipient,
            actor=actor,
            verb=verb,
            notification_type=notification_type,
            target_ct=ContentType.objects.get_for_model(target_obj),
            target_id=target_obj.id
        )
        logger.info(f"üîî Notification created: {recipient} ‚Üê {verb}")
    except Exception as e:
        logger.error(f"‚ùå Failed to create notification: {e}")


@receiver(post_save, sender=AppointmentRequest)
def notify_doctor_new_request(sender, instance, created, **kwargs):
    """
    –£–≤–µ–¥–æ–º–∏—Ç—å –≤—Ä–∞—á–∞ –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ –Ω–∞ –ø—Ä–∏—ë–º.
    """
    if created:
        _create_notification(
            recipient=instance.doctor,
            actor=instance.patient,
            verb="–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–∏—ë–º",
            target_obj=instance,
            notification_type="info"
        )


@receiver(post_save, sender=AppointmentRequest)
def notify_patient_status_change(sender, instance, created, **kwargs):
    """
    –£–≤–µ–¥–æ–º–∏—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏.
    """
    if not created and instance.status in (
        AppointmentRequest.Status.ACCEPTED,
        AppointmentRequest.Status.REJECTED,
    ):
        verb = (
            "–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞"
            if instance.status == AppointmentRequest.Status.ACCEPTED
            else "–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞"
        )
        _create_notification(
            recipient=instance.patient,
            actor=instance.doctor,
            verb=verb,
            target_obj=instance,
            notification_type="success" if instance.status == AppointmentRequest.Status.ACCEPTED else "warning"
        )


@receiver(post_save, sender=Review)
def notify_doctor_new_review(sender, instance, created, **kwargs):
    """
    –£–≤–µ–¥–æ–º–∏—Ç—å –≤—Ä–∞—á–∞ –æ –Ω–æ–≤–æ–º –æ—Ç–∑—ã–≤–µ.
    """
    if created:
        _create_notification(
            recipient=instance.appointment.doctor,
            actor=instance.appointment.patient,
            verb="–ù–æ–≤—ã–π –æ—Ç–∑—ã–≤",
            target_obj=instance,
            notification_type="info"
        )
