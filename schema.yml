openapi: 3.0.3
info:
  title: MEDHUB.TJ API
  version: 1.0.0
  description: Централизованная медицинская платформа для Таджикистана
paths:
  /api/v1/token/refresh/:
    post:
      operationId: api_v1_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/v1/appointments/{id}/status/:
    put:
      operationId: api_v1_v1_appointments_status_update
      description: Врач может принять или отклонить заявку. Супер‑админ имеет право
        обновить любую заявку.
      summary: Обновление статуса заявки
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Appointments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentStatusUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentStatusUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentStatusUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentRequestDetail'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentError'
          description: ''
    patch:
      operationId: api_v1_v1_appointments_status_partial_update
      description: Врач может принять или отклонить заявку. Супер‑админ имеет право
        обновить любую заявку.
      summary: Обновление статуса заявки
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Appointments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAppointmentStatusUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAppointmentStatusUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAppointmentStatusUpdateRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentRequestDetail'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentError'
          description: ''
  /api/v1/v1/auth/login/:
    post:
      operationId: api_v1_v1_auth_login_create
      description: Авторизация пользователя по номеру телефона и паролю. Возвращает
        пару токенов (access и refresh).
      summary: Логин по номеру телефона
      tags:
      - Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequestRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneTokenObtainPair'
          description: ''
  /api/v1/v1/auth/me/:
    get:
      operationId: api_v1_v1_auth_me_retrieve
      description: Возвращает данные профиля текущего авторизованного пользователя.
      summary: Профиль текущего пользователя
      tags:
      - Accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_v1_v1_auth_me_partial_update
      description: Позволяет частично обновить данные профиля текущего пользователя.
        Нельзя изменить роль, принадлежность к учреждению или статус супер-админа.
      summary: Обновление профиля
      tags:
      - Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/v1/auth/register/:
    post:
      operationId: api_v1_v1_auth_register_create
      description: Создаёт нового пользователя в системе. Доступно без авторизации.
      summary: Регистрация нового пользователя
      tags:
      - Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/v1/chat/{user_id}/:
    get:
      operationId: api_v1_v1_chat_list
      description: Возвращает историю сообщений между текущим пользователем и другим
        пользователем.
      summary: История переписки
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        description: ID второго пользователя в чате
        required: true
      tags:
      - Messages
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
          description: ''
    post:
      operationId: api_v1_v1_chat_create
      description: Отправка нового сообщения другому пользователю. Чат разрешён только
        между доктором и пациентом.
      summary: Отправить сообщение
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - Messages
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MessageRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MessageRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
          description: ''
  /api/v1/v1/dialogs/:
    get:
      operationId: api_v1_v1_dialogs_list
      description: Возвращает список последних сообщений в диалогах текущего пользователя.
        Для каждой уникальной пары (sender, receiver) берётся только последнее сообщение.
      summary: Список диалогов
      tags:
      - Messages
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
          description: ''
  /api/v1/v1/doctor/appointments/:
    get:
      operationId: api_v1_v1_doctor_appointments_list
      description: Возвращает список входящих заявок для текущего врача (только ожидающие).
      summary: Список заявок врача
      tags:
      - Appointments
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppointmentRequestDetail'
          description: ''
  /api/v1/v1/doctors/{doctor_id}/reviews/:
    get:
      operationId: api_v1_v1_doctors_reviews_list
      description: Возвращает список отзывов для конкретного врача по его ID. Доступно
        всем пользователям.
      summary: Отзывы врача
      parameters:
      - in: path
        name: doctor_id
        schema:
          type: integer
        description: ID врача
        required: true
      tags:
      - Reviews
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReviewList'
          description: ''
  /api/v1/v1/messages/{id}/read/:
    patch:
      operationId: api_v1_v1_messages_read_partial_update
      description: Помечает сообщение как прочитанное, если оно адресовано текущему
        пользователю.
      summary: Пометить сообщение как прочитанное
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Messages
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageStatus'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageError'
          description: ''
  /api/v1/v1/notifications/:
    get:
      operationId: api_v1_v1_notifications_list
      description: Возвращает список всех уведомлений текущего пользователя. Можно
        фильтровать по статусу (?is_read=true/false).
      summary: Список уведомлений
      tags:
      - Notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
          description: ''
  /api/v1/v1/notifications/{id}/read/:
    put:
      operationId: api_v1_v1_notifications_read_update
      description: Помечает одно уведомление как прочитанное. Доступно только получателю.
      summary: Пометить уведомление как прочитанное
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationError'
          description: ''
    patch:
      operationId: api_v1_v1_notifications_read_partial_update
      description: Помечает одно уведомление как прочитанное. Доступно только получателю.
      summary: Пометить уведомление как прочитанное
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationError'
          description: ''
  /api/v1/v1/notifications/mark-all-read/:
    post:
      operationId: api_v1_v1_notifications_mark_all_read_create
      description: Массовая отметка всех уведомлений текущего пользователя как прочитанных.
      summary: Пометить все уведомления прочитанными
      tags:
      - Notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationMarkedCount'
          description: ''
  /api/v1/v1/patient/appointments/:
    get:
      operationId: api_v1_v1_patient_appointments_list
      description: Возвращает список активных заявок текущего пациента.
      summary: Список заявок пациента
      tags:
      - Appointments
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppointmentRequestDetail'
          description: ''
    post:
      operationId: api_v1_v1_patient_appointments_create
      description: Пациент создаёт новую заявку на приём к врачу.
      summary: Создать заявку на приём
      tags:
      - Appointments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentRequestCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentRequestCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentRequestCreateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentSuccess'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentError'
          description: ''
  /api/v1/v1/patient/reviews/:
    get:
      operationId: api_v1_v1_patient_reviews_list
      description: Возвращает список всех отзывов текущего пациента.
      summary: Список отзывов пациента
      tags:
      - Reviews
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReviewList'
          description: ''
    post:
      operationId: api_v1_v1_patient_reviews_create
      description: Создание нового отзыва по принятой заявке. Доступно только пациенту.
      summary: Создать отзыв
      tags:
      - Reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewCreateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewDetail'
          description: ''
  /api/v1/v1/regions/:
    get:
      operationId: api_v1_v1_regions_list
      description: Возвращает публичный список всех активных регионов Таджикистана.
      summary: Список регионов
      tags:
      - Core
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Region'
          description: ''
  /api/v1/v1/regions/{region_slug}/cities/:
    get:
      operationId: api_v1_v1_regions_cities_list
      description: Возвращает список всех активных городов выбранного региона по его
        slug.
      summary: Список городов региона
      parameters:
      - in: path
        name: region_slug
        schema:
          type: string
        description: 'Slug региона (например: dushanbe, sughd)'
        required: true
      tags:
      - Core
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/City'
          description: ''
  /api/v1/v1/stats/institution/{id}/:
    get:
      operationId: api_v1_v1_stats_institution_retrieve
      description: Возвращает статистику по конкретному учреждению. Доступно супер‑админу
        и администратору учреждения.
      summary: Статистика по учреждению
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: pk
        schema:
          type: integer
        description: ID учреждения
        required: true
      tags:
      - Statistics
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionSpecificStats'
          description: ''
  /institutions/v1/institutions/:
    get:
      operationId: institutions_v1_institutions_list
      description: Возвращает публичный список всех активных учреждений.
      summary: Список учреждений
      parameters:
      - in: query
        name: city
        schema:
          type: integer
      - in: query
        name: institution_type
        schema:
          type: string
          title: Тип учреждения
          enum:
          - clinic
          - hospital
          - laboratory
          - other
        description: |-
          * `hospital` - Больница
          * `clinic` - Клиника
          * `laboratory` - Лаборатория
          * `other` - Другое
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_top
        schema:
          type: boolean
      - in: query
        name: ownership_type
        schema:
          type: string
          title: Форма собственности
          enum:
          - private
          - state
        description: |-
          * `state` - Государственное
          * `private` - Частное
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Institutions
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InstitutionPublic'
          description: ''
    post:
      operationId: institutions_v1_institutions_create
      description: Создаёт новое учреждение. Доступно только супер‑админу.
      summary: Создать учреждение
      tags:
      - Institutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstitutionAdminRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InstitutionAdminRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InstitutionAdminRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionAdmin'
          description: ''
  /institutions/v1/institutions/{id}/:
    get:
      operationId: institutions_v1_institutions_retrieve
      description: Возвращает публичную информацию об учреждении по ID.
      summary: Информация об учреждении
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Учреждение.
        required: true
      tags:
      - Institutions
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionPublic'
          description: ''
    put:
      operationId: institutions_v1_institutions_update
      description: Обновление данных учреждения. Доступно администратору учреждения
        или супер‑админу.
      summary: Обновить учреждение
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Учреждение.
        required: true
      tags:
      - Institutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstitutionAdminRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InstitutionAdminRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InstitutionAdminRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionAdmin'
          description: ''
    patch:
      operationId: institutions_v1_institutions_partial_update
      description: Частичное обновление данных учреждения. Доступно администратору
        учреждения или супер‑админу.
      summary: Частичное обновление учреждения
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Учреждение.
        required: true
      tags:
      - Institutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInstitutionAdminRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInstitutionAdminRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInstitutionAdminRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstitutionAdmin'
          description: ''
    delete:
      operationId: institutions_v1_institutions_destroy
      description: Удаление учреждения. Доступно только супер‑админу.
      summary: Удалить учреждение
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Учреждение.
        required: true
      tags:
      - Institutions
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AppointmentError:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    AppointmentRequestCreateRequest:
      type: object
      description: |-
        Создание новой заявки на приём.
        Пациент указывается автоматически из request.user.
      properties:
        doctor:
          type: integer
          title: Врач
        note:
          type: string
          title: Комментарий пациента
      required:
      - doctor
    AppointmentRequestDetail:
      type: object
      description: Детальное отображение заявки.
      properties:
        id:
          type: integer
          readOnly: true
        patient_name:
          type: string
          readOnly: true
        patient_phone:
          type: string
          readOnly: true
        doctor_name:
          type: string
          readOnly: true
        doctor_phone:
          type: string
          readOnly: true
        note:
          type: string
          title: Комментарий пациента
        status:
          allOf:
          - $ref: '#/components/schemas/Status7f4Enum'
          readOnly: true
          title: Статус заявки
        appointment_time:
          type: string
          format: date-time
          nullable: true
          title: Время приёма
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Создана
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Обновлена
      required:
      - created_at
      - doctor_name
      - doctor_phone
      - id
      - patient_name
      - patient_phone
      - status
      - updated_at
    AppointmentStatusUpdateRequest:
      type: object
      description: Обновление статуса заявки (врач/админ).
      properties:
        status:
          $ref: '#/components/schemas/Status7f4Enum'
      required:
      - status
    AppointmentSuccess:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    City:
      type: object
      description: Сериализатор города с вложенными данными региона.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Город
          maxLength: 100
        slug:
          type: string
          title: Псевдоним
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        region_name:
          type: string
          readOnly: true
        region_slug:
          type: string
          readOnly: true
      required:
      - id
      - name
      - region_name
      - region_slug
      - slug
    Department:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Отделение
          maxLength: 255
        description:
          type: string
          title: Описание
      required:
      - id
      - name
    DepartmentRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Отделение
          maxLength: 255
        description:
          type: string
          title: Описание
      required:
      - name
    InstitutionAdmin:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 255
        slug:
          type: string
          title: Псевдоним
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          title: Описание
        institution_type:
          allOf:
          - $ref: '#/components/schemas/InstitutionTypeEnum'
          title: Тип учреждения
        ownership_type:
          allOf:
          - $ref: '#/components/schemas/OwnershipTypeEnum'
          title: Форма собственности
        city:
          type: integer
          nullable: true
          title: Город
        city_name:
          type: string
          readOnly: true
        region_name:
          type: string
          readOnly: true
        address:
          type: string
          title: Адрес
          maxLength: 255
        phone:
          type: string
          title: Телефон
          maxLength: 20
        email:
          type: string
          format: email
          title: Адрес электронной почты
          maxLength: 254
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
          title: Широта
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
          title: Долгота
        logo:
          type: string
          format: uri
          nullable: true
          title: Логотип
        is_top:
          type: boolean
          title: ТОП учреждение
        is_active:
          type: boolean
          title: Активно
        departments:
          type: array
          items:
            $ref: '#/components/schemas/Department'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата обновления
      required:
      - address
      - city_name
      - created_at
      - departments
      - id
      - institution_type
      - name
      - ownership_type
      - phone
      - region_name
      - slug
      - updated_at
    InstitutionAdminRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название
          maxLength: 255
        slug:
          type: string
          minLength: 1
          title: Псевдоним
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          title: Описание
        institution_type:
          allOf:
          - $ref: '#/components/schemas/InstitutionTypeEnum'
          title: Тип учреждения
        ownership_type:
          allOf:
          - $ref: '#/components/schemas/OwnershipTypeEnum'
          title: Форма собственности
        city:
          type: integer
          nullable: true
          title: Город
        address:
          type: string
          minLength: 1
          title: Адрес
          maxLength: 255
        phone:
          type: string
          minLength: 1
          title: Телефон
          maxLength: 20
        email:
          type: string
          format: email
          title: Адрес электронной почты
          maxLength: 254
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
          title: Широта
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
          title: Долгота
        logo:
          type: string
          format: binary
          nullable: true
          title: Логотип
        is_top:
          type: boolean
          title: ТОП учреждение
        is_active:
          type: boolean
          title: Активно
      required:
      - address
      - institution_type
      - name
      - ownership_type
      - phone
      - slug
    InstitutionPublic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 255
        slug:
          type: string
          title: Псевдоним
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          title: Описание
        institution_type:
          allOf:
          - $ref: '#/components/schemas/InstitutionTypeEnum'
          title: Тип учреждения
        ownership_type:
          allOf:
          - $ref: '#/components/schemas/OwnershipTypeEnum'
          title: Форма собственности
        city:
          allOf:
          - $ref: '#/components/schemas/City'
          readOnly: true
        region_name:
          type: string
          readOnly: true
        address:
          type: string
          title: Адрес
          maxLength: 255
        phone:
          type: string
          title: Телефон
          maxLength: 20
        email:
          type: string
          format: email
          title: Адрес электронной почты
          maxLength: 254
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
          title: Широта
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
          title: Долгота
        logo_url:
          type: string
          readOnly: true
        is_top:
          type: boolean
          title: ТОП учреждение
        departments:
          type: array
          items:
            $ref: '#/components/schemas/Department'
          readOnly: true
      required:
      - address
      - city
      - departments
      - id
      - institution_type
      - logo_url
      - name
      - ownership_type
      - phone
      - region_name
      - slug
    InstitutionSpecificStats:
      type: object
      description: Показатели по конкретному учреждению.
      properties:
        period_start:
          type: string
          format: date
          title: Начало периода
        period_end:
          type: string
          format: date
          title: Конец периода
        institution_id:
          type: integer
          title: ID учреждения
        name:
          type: string
          title: Название учреждения
        total_doctors:
          type: integer
          title: Всего врачей
        total_requests:
          type: integer
          title: Всего заявок
        accepted_requests:
          type: integer
          title: Принятые заявки
        rejected_requests:
          type: integer
          title: Отклонённые заявки
        avg_rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
          title: Средний рейтинг
          description: Средняя оценка врачей учреждения
      required:
      - accepted_requests
      - institution_id
      - name
      - period_end
      - period_start
      - rejected_requests
      - total_doctors
      - total_requests
    InstitutionTypeEnum:
      enum:
      - hospital
      - clinic
      - laboratory
      - other
      type: string
      description: |-
        * `hospital` - Больница
        * `clinic` - Клиника
        * `laboratory` - Лаборатория
        * `other` - Другое
    LoginRequestRequest:
      type: object
      properties:
        phone_number:
          type: string
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - phone_number
    Message:
      type: object
      description: |-
        Сериализатор для отправки и получения сообщений.
        Отправитель определяется автоматически из request.user.
      properties:
        id:
          type: integer
          readOnly: true
        sender:
          type: integer
          readOnly: true
          title: Отправитель
        sender_name:
          type: string
          readOnly: true
        receiver:
          type: integer
          title: Получатель
        receiver_name:
          type: string
          readOnly: true
        content:
          type: string
          title: Текст сообщения
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата обновления
        is_read:
          type: boolean
          title: Прочитано
        status:
          allOf:
          - $ref: '#/components/schemas/MessageStatusEnum'
          readOnly: true
          title: Статус
        attachment:
          type: string
          format: uri
          nullable: true
          title: Вложение
      required:
      - content
      - created_at
      - id
      - receiver
      - receiver_name
      - sender
      - sender_name
      - status
      - updated_at
    MessageError:
      type: object
      properties:
        error:
          type: string
      required:
      - error
    MessageRequest:
      type: object
      description: |-
        Сериализатор для отправки и получения сообщений.
        Отправитель определяется автоматически из request.user.
      properties:
        receiver:
          type: integer
          title: Получатель
        content:
          type: string
          minLength: 1
          title: Текст сообщения
        is_read:
          type: boolean
          title: Прочитано
        attachment:
          type: string
          format: binary
          nullable: true
          title: Вложение
      required:
      - content
      - receiver
    MessageStatus:
      type: object
      properties:
        status:
          type: string
      required:
      - status
    MessageStatusEnum:
      enum:
      - sent
      - delivered
      - read
      type: string
      description: |-
        * `sent` - Отправлено
        * `delivered` - Доставлено
        * `read` - Прочитано
    Notification:
      type: object
      description: |-
        Сериализатор уведомлений.
        Показывает имя инициатора, строковое представление цели и тип уведомления.
      properties:
        id:
          type: integer
          readOnly: true
        verb:
          type: string
          readOnly: true
          title: Действие
        actor_id:
          type: integer
          readOnly: true
        actor_name:
          type: string
          readOnly: true
        target_repr:
          type: string
          description: Возвращает читаемое представление связанного объекта.
          readOnly: true
        notification_type:
          allOf:
          - $ref: '#/components/schemas/NotificationTypeEnum'
          readOnly: true
          title: Тип уведомления
        is_read:
          type: boolean
          title: Прочитано
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата обновления
      required:
      - actor_id
      - actor_name
      - created_at
      - id
      - notification_type
      - target_repr
      - updated_at
      - verb
    NotificationError:
      type: object
      properties:
        error:
          type: string
      required:
      - error
    NotificationMarkedCount:
      type: object
      properties:
        marked_count:
          type: integer
      required:
      - marked_count
    NotificationTypeEnum:
      enum:
      - info
      - warning
      - success
      - error
      - system
      type: string
      description: |-
        * `info` - Информация
        * `warning` - Предупреждение
        * `success` - Успех
        * `error` - Ошибка
        * `system` - Системное
    OwnershipTypeEnum:
      enum:
      - state
      - private
      type: string
      description: |-
        * `state` - Государственное
        * `private` - Частное
    PatchedAppointmentStatusUpdateRequest:
      type: object
      description: Обновление статуса заявки (врач/админ).
      properties:
        status:
          $ref: '#/components/schemas/Status7f4Enum'
    PatchedInstitutionAdminRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название
          maxLength: 255
        slug:
          type: string
          minLength: 1
          title: Псевдоним
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          title: Описание
        institution_type:
          allOf:
          - $ref: '#/components/schemas/InstitutionTypeEnum'
          title: Тип учреждения
        ownership_type:
          allOf:
          - $ref: '#/components/schemas/OwnershipTypeEnum'
          title: Форма собственности
        city:
          type: integer
          nullable: true
          title: Город
        address:
          type: string
          minLength: 1
          title: Адрес
          maxLength: 255
        phone:
          type: string
          minLength: 1
          title: Телефон
          maxLength: 20
        email:
          type: string
          format: email
          title: Адрес электронной почты
          maxLength: 254
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
          title: Широта
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
          title: Долгота
        logo:
          type: string
          format: binary
          nullable: true
          title: Логотип
        is_top:
          type: boolean
          title: ТОП учреждение
        is_active:
          type: boolean
          title: Активно
    PatchedUserRequest:
      type: object
      properties:
        phone_number:
          type: string
          minLength: 1
          description: E.164 format preferred (+992...)
          maxLength: 32
        email:
          type: string
          format: email
          title: Адрес электронной почты
          maxLength: 254
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
        institution:
          type: integer
          nullable: true
    PhoneTokenObtainPair:
      type: object
      description: Позволяет логиниться по phone_number вместо username.
      properties:
        phone_number:
          type: string
      required:
      - phone_number
    RatingEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      type: integer
      description: |-
        * `1` - 1
        * `2` - 2
        * `3` - 3
        * `4` - 4
        * `5` - 5
    Region:
      type: object
      description: Сериализатор региона с базовыми полями.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Регион
          maxLength: 100
        slug:
          type: string
          title: Псевдоним
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - name
      - slug
    RegisterRequest:
      type: object
      properties:
        phone_number:
          type: string
          minLength: 1
          description: E.164 format preferred (+992...)
          maxLength: 32
        email:
          type: string
          format: email
          title: Адрес электронной почты
          maxLength: 254
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
        institution:
          type: integer
          nullable: true
        password:
          type: string
          writeOnly: true
          minLength: 6
      required:
      - password
      - phone_number
      - user_type
    ReviewCreateRequest:
      type: object
      description: |-
        Создание нового отзыва.
        Доступно только по принятой заявке текущего пользователя‑пациента.
      properties:
        appointment:
          type: integer
          description: ID принятой заявки на приём
        rating:
          allOf:
          - $ref: '#/components/schemas/RatingEnum'
          title: Оценка
          minimum: 0
          maximum: 32767
        comment:
          type: string
          title: Комментарий
      required:
      - appointment
      - rating
    ReviewDetail:
      type: object
      description: |-
        Детальный просмотр отзыва.
        Добавляет телефоны пациента и врача для админ‑панели/подробного экрана.
      properties:
        id:
          type: integer
          readOnly: true
        appointment:
          type: integer
          title: Заявка
        patient_name:
          type: string
          readOnly: true
        patient_phone:
          type: string
          readOnly: true
        doctor_name:
          type: string
          readOnly: true
        doctor_phone:
          type: string
          readOnly: true
        rating:
          allOf:
          - $ref: '#/components/schemas/RatingEnum'
          title: Оценка
          minimum: 0
          maximum: 32767
        comment:
          type: string
          title: Комментарий
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата обновления
      required:
      - appointment
      - created_at
      - doctor_name
      - doctor_phone
      - id
      - patient_name
      - patient_phone
      - rating
      - updated_at
    ReviewList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        patient_name:
          type: string
          readOnly: true
        doctor_name:
          type: string
          readOnly: true
        rating:
          allOf:
          - $ref: '#/components/schemas/RatingEnum'
          title: Оценка
          minimum: 0
          maximum: 32767
        comment:
          type: string
          title: Комментарий
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
      required:
      - created_at
      - doctor_name
      - id
      - patient_name
      - rating
    Status7f4Enum:
      enum:
      - pending
      - accepted
      - rejected
      - cancelled
      type: string
      description: |-
        * `pending` - Ожидает
        * `accepted` - Принята
        * `rejected` - Отклонена
        * `cancelled` - Отменена
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        phone_number:
          type: string
          description: E.164 format preferred (+992...)
          maxLength: 32
        email:
          type: string
          format: email
          title: Адрес электронной почты
          maxLength: 254
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        full_name:
          type: string
          readOnly: true
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
        institution:
          type: integer
          nullable: true
        is_super_admin_flag:
          type: boolean
          readOnly: true
          title: Is super admin
          description: System-wide super admin with full access
        date_joined:
          type: string
          format: date-time
          readOnly: true
          title: Дата регистрации
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Последний вход
      required:
      - date_joined
      - full_name
      - id
      - is_super_admin_flag
      - last_login
      - phone_number
      - user_type
    UserTypeEnum:
      enum:
      - super_user
      - admin
      - doctor
      - patient
      - staff
      type: string
      description: |-
        * `super_user` - Super User
        * `admin` - Institution Admin
        * `doctor` - Doctor
        * `patient` - Patient
        * `staff` - Staff
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
